{"version":3,"sources":["SBD_Yellow_Primary.png","App.js","reportWebVitals.js","index.js"],"names":["userAgentStr","VIPs","autoSelected","customStyles","option","provided","state","borderBottom","color","isSelected","padding","backgroundColor","control","width","border","singleValue","opacity","isDisabled","transition","targetPeopleIDs","targetProjectIDs","onSelectThumbnail","this","props","item","personIDToBeRemoved","tags","value","index","indexOf","length","splice","alert","caption","personIDToAdd","push","handleProjectChange","e","e2","optionAction","action","removedValue","App","componentDidMount","a","updatePeopleState","peopleThumbnails","existingthumbnails","peoplethumbnails","newimagethumbnails","concat","sort","b","setState","updateProjectState","projectsList","existingprojects","projects","newprojects","OAuth","initialize","popup","cache","headers","done","result","me","data","userId","id","accounts","raw","i","name","getPeopleFunc","theResult","representationalImages","numProcessed","personId","repImage","JSON","parse","window","localStorage","getItem","get","person","selectEm","representationalImage","src","avatar_url","thumbnail","thumbnailWidth","thumbnailHeight","title","setItem","stringify","fail","err","getProjectsFunc","projectspage","projectslist","projectsOptions","project","projectSelectOption","label","putPeopleToProject","putData","projectId","put","response","className","style","logo","alt","height","images","onClickThumbnail","options","isMulti","onChange","styles","onClick","fontSize","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.021ac5fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/SBD_Yellow_Primary.146ba792.png\";","import React from 'react'\nimport logo from './SBD_Yellow_Primary.png';\nimport './App.css';\nimport { OAuth } from 'oauthio-web';\nimport Gallery from 'react-grid-gallery';\nimport Select from 'react-select';\n\nconst userAgentStr = 'SBDProjectTool (adamgf@gmail.com)'\n\nconst VIPs = [\n\t12921371, \n\t12964335, \n\t12964336, \n\t12998921, \n\t13325954, \n\t20877820, \n\t36329995, \n\t36330029, \n\t36330129, \n\t36331086, \n\t36492685, \n\t36533990, \n\t36540113, \n\t36540202\n]\n\nconst autoSelected = [\n\t12964335,\n\t36329995,\n\t36330129\n]\n\nconst customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    borderBottom: '1px dotted yellow',\n    color: state.isSelected ? 'blue' : 'yellow',\n    padding: 20,\n\tbackgroundColor: '#808080',\n\tcolor: '#ffffff'\n  }),\n  control: () => ({\n    // none of react-select's styles are passed to <Control />\n    width: '100%',\n\tborder: '1px dotted yellow'\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return { ...provided, opacity, transition };\n  }\n}\n\nvar targetPeopleIDs = []\nvar targetProjectIDs = []\n\nfunction onSelectThumbnail() {\n  if (!this.props.item.isSelected) {\n    const personIDToAdd = this.props.item.tags[0].value\n    targetPeopleIDs.push(personIDToAdd)\n    alert(this.props.item.caption + ' has been added!')\n    this.props.item.isSelected = true\n  }\n  else {\n    const personIDToBeRemoved = this.props.item.tags[0].value\n    const index = targetPeopleIDs.indexOf(personIDToBeRemoved)\n\tif (targetPeopleIDs.length === 1) {\n      targetPeopleIDs = []\n\t}\n    else if (index !== -1) {\n      targetPeopleIDs.splice(index, 1) \n    }\n    alert(this.props.item.caption + ' has been removed!')\n    this.props.item.isSelected = false\n  }\n}\n\nfunction handleProjectChange(e, e2) {\n  let optionAction = e2.action\n  if (optionAction === 'select-option') {\n    targetProjectIDs.push(e2.option.value)\n  }\n  else if (optionAction === 'clear') {\n  \ttargetProjectIDs = []\n  }\n  else if (optionAction === 'remove-value') {\n\tconst index = targetProjectIDs.indexOf(e2.removedValue.value)\n\tif (targetProjectIDs.length === 1) {\n\t  targetProjectIDs = []\n\t}\n\telse if (index !== -1) {\n\t  targetProjectIDs.splice(e2.removedValue.value, index)\n\t}\n  }\n  else {\n  \talert('Unrecognized action: ' + optionAction + ' sent to handleProjectChange().')\n  }\t\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      peoplethumbnails : [],\n      projects : []    \n    }\n  }\n\n  componentDidMount = async() => {\n\n    const updatePeopleState = (peopleThumbnails) => {\n      const existingthumbnails = this.state.peoplethumbnails\n\t\tif (peopleThumbnails && peopleThumbnails.length > 0) {\n        var newimagethumbnails = existingthumbnails.concat(peopleThumbnails)\n\t\tnewimagethumbnails.sort((a, b) => (a.tags[0].value > b.tags[0].value) ? 1 : -1)\n        this.setState({ peoplethumbnails : newimagethumbnails })\n      }\n    }\n    \n    const updateProjectState = (projectsList) => {\n      const existingprojects = this.state.projects\n\t  if (projectsList && projectsList.length > 0) {\n\t    const newprojects = existingprojects.concat(projectsList)\n        this.setState({ projects : newprojects })\n\t  }\n    }\n\n    OAuth.initialize('HbYXKGPIU3ilvj5XZmgy7PKvUGg')\n  \tOAuth.popup('basecamp', { cache : true, headers: { 'User-Agent' : userAgentStr, 'Content-Type' : 'application/json' } })\n\t.done(function(result) {\n      result.me().done(function(data) {\n\n        var userId = data.id \n        let accounts = data.raw.accounts\n\t\t  for (var i=0;i < accounts.length;i++) {\n          if (accounts[i].name === \"Stanley Black & Decker\") {\n            userId = accounts[i].id\n            break\n          }\n        }\n\t\t\t\t\n        const getPeopleFunc = async(theResult) => {\n\t\t  \n\t\t  var representationalImages = []\n\t\t  var numProcessed = 0\n\t\t  for (const personId of VIPs) {\n\t\t\tconst repImage = JSON.parse(window.localStorage.getItem(`person_${personId}`))\n\t\t\tif (repImage !== null) {\n\t\t\t  representationalImages.push(repImage)\n\t\t\t  numProcessed += 1\n\t\t\t  if (numProcessed === VIPs.length) {\n\t\t        updatePeopleState(representationalImages)         \n\t\t\t  }\n\t\t\t}\n\t\t\telse {\n              theResult.get(`https://3.basecampapi.com/${userId}/people/${personId}.json`, {\n\t\t\t    headers: {\n\t\t\t  \t  'User-Agent' : userAgentStr,\n\t\t\t\t  'Content-Type' : 'application/json'\n\t\t\t    }\n\t\t      })\n              .done(function(person) {\n\t\t\t    const autoSelectIndex = autoSelected.indexOf(person.id)\n\t\t\t    const selectEm = (autoSelectIndex !== -1)\n\t\t\t    if (selectEm) {\n\t\t\t\t  targetPeopleIDs.push(person.id)\n\t\t\t    }\n\t\t\t    const representationalImage = {\n                  src: person.avatar_url,\n                  thumbnail: person.avatar_url,\n                  thumbnailWidth: 64,\n                  thumbnailHeight: 64,\n                  isSelected: selectEm,\n                  caption: person.name,\n                  tags: [{ value: person.id, title: person.name }]\n                }\n\t\t\t\twindow.localStorage.setItem(`person_${personId}`, JSON.stringify(representationalImage))\n\t\t\t    representationalImages.push(representationalImage)\n\t\t\t    numProcessed += 1\n\t\t\t    if (numProcessed === VIPs.length) {\n\t\t          updatePeopleState(representationalImages)         \n\t\t\t    }\n              })\n              .fail(function(err) {\n\t\t\t    numProcessed += 1\n  \t\t\t    if (numProcessed === VIPs.length) {\n  \t\t          updatePeopleState(representationalImages)         \n  \t\t\t    }\n                alert('Failed to get person with id: ' + personId + ' err: ' + JSON.stringify(err)) \n              })\n\t\t\t}   \n\t\t  }\n\t\t  \n        }\n\n        getPeopleFunc(result) \n\n        const getProjectsFunc = async(theResult, projectspage) => {\n\t      /* \n\t\t  if (projects != null) {\n\t\t    updateProjectState(projects)\n\t\t\tgetProjectsFunc(theResult, projectspage + 1)\n\t\t  }\n\t\t  else { */\n            theResult.get(`https://3.basecampapi.com/${userId}/projects.json?page=${projectspage}`, {\n\t\t\t  cache: true,\n  \t\t      headers: {\n\t\t\t    \"User-Agent\" : userAgentStr,\n  \t\t\t    \"Content-Type\" : \"application/json\"\n  \t\t\t  }\n\t\t    })\n            .done(function(projectslist) {\n              var projectsOptions = []\n              for (const project of projectslist) {\n\t\t\t    const projectSelectOption = {\n\t\t\t\t  value: project.id,\n\t\t\t\t  label: project.name\t\t\n\t\t\t    }\t\n\t\t\t    projectsOptions.push(projectSelectOption)\n              }\n              if (projectsOptions.length > 0) {\n\t\t\t\twindow.localStorage.setItem(`projects_${projectspage}`, JSON.stringify(projectsOptions))\n                updateProjectState(projectsOptions)\n                getProjectsFunc(result, projectspage + 1)\n              }\n\t\t\t  else {\n\t\t\t  \twindow.localStorage.setItem(`projects_${projectspage}`, JSON.stringify([]))\n\t\t\t  }\n\t\t\t  \t\n\t\t\t  \n            })\n            .fail(function(err) {\n\t\t      const projects = JSON.parse(window.localStorage.getItem(`projects_${projectspage}`))\n\t  \t\t  if (projects != null) {\n\t\t\t\tif (projects.length > 0) {\n\t  \t\t      updateProjectState(projects)\n\t  \t\t\t  getProjectsFunc(theResult, projectspage + 1)\n\t\t\t\t}\n\t  \t\t  }\n\t\t\t  else {\n                alert('Failed to get projects for page: ' + projectspage + ' err: ' + JSON.stringify(err)) \n\t\t\t  }\n            })\n\t\t  //}            \n        }\n\n        getProjectsFunc(result, 1)\n    \n      })\n    })\n    .fail(function(err) {\n      alert('OAuth failed with err: ' + JSON.stringify(err)) \n    })            \n  }\n\n  putPeopleToProject = async() => {\n  \tif (targetPeopleIDs.length === 0 || targetProjectIDs.length === 0) {\n  \t  alert('Please select at least one person and one project.')\n  \t}\n  \telse {\n      OAuth.initialize('HbYXKGPIU3ilvj5XZmgy7PKvUGg')\n  \t  OAuth.popup('basecamp', { cache : true, headers: { 'User-Agent' : userAgentStr, 'Content-Type' : 'application/json' } })\n  \t  .done(function(result) {\n  \t    result.me().done(function(data) {\n\n          var userId = data.id \n          let accounts = data.raw.accounts\n          for (var i=0;i < accounts.length;i++) {\n            if (accounts[i].name === \"Stanley Black & Decker\") {\n              userId = accounts[i].id\n              break\n            }\n          }\n\t    \n  \t\t  //console.log('access_token is: ' + result.access_token)\n  \t      const putData = `{ \"grant\" : [${targetPeopleIDs}], \"revoke\" : [] }`\n\t\t\t\t\n          for (const projectId of targetProjectIDs) {\n  \t\t    result.put(`https://3.basecampapi.com/${userId}/projects/${projectId}/people/users.json`, {\n  \t\t\t  headers: {\n\t\t\t\t\"User-Agent\" : userAgentStr,\n  \t\t\t    \"Content-Type\" : \"application/json\"\n  \t\t\t  },\n  \t\t      data: putData\n  \t\t    })\n  \t        .done(function (response) {\n  \t          //this will display the id of the message in the console\n  \t          alert('Success granting users: ' + JSON.stringify(response))\n  \t        })\n  \t        .fail(function (err) {\n  \t          //handle error with err\n  \t\t\t  alert('Failed to grant users: ' + JSON.stringify(targetPeopleIDs) + \n  \t\t\t        ' for project: ' + projectId + ' err: ' + JSON.stringify(err))\n  \t        });\n\t\t  \n  \t\t  }\n\t\t\n  \t    })\n  \t  })\n      .fail(function(err) {\n        alert('OAuth failed with err: ' + JSON.stringify(err)) \n      })            \n  \t}\n  }\n\n  render() {  \n    return (\n    <div className=\"App\">\n      <body className=\"App-header\">\n\t\t<div style={{ 'align' : 'left' }}><img src={logo} alt=\"logo\" width='293.88888888888' height='46'/> Add People to Project Tool (<i>invite only</i>)</div>\n        <div><p/>\n          All People:\n          <div>\n            <Gallery images={this.state.peoplethumbnails} onClickThumbnail={onSelectThumbnail} />\n          </div>     \n        </div>\n\t\t<p/>\n        <div>\n          All Projects: \n\t\t  <div>\n\t\t    <Select id='projectselector' options={this.state.projects} isMulti onChange={handleProjectChange} styles={customStyles} />\n\t\t  </div>\n        </div><p/>\n\t\t<div><button onClick={this.putPeopleToProject} style={{ fontSize : '48px', height : '80px', width : '65%', backgroundColor : '#808080', color : '#ffffff' }}>Add People to Projects</button></div>\n        <p/><p/>\n\t  </body>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}